<template>
  <div class="app-container">
    <el-form :model="queryParam" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">
#foreach($column in $columnList)
#if($column.queryFlag=="1")
#set($dictType=$column.dictType)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.htmlType == "input")
      <el-form-item label="${comment}" prop="${column.javaField}">
        <el-input v-model="queryParam.${column.javaField}" placeholder="请输入${comment}" clearable size="small" @keyup.enter.native="handleQuery"/>
      </el-form-item>
#elseif($column.htmlType == "number")
      <el-form-item label="${comment}" prop="${column.javaField}">
        <el-input_number v-model="queryParam.${column.javaField}" placeholder="请输入${comment}" clearable size="small" @keyup.enter.native="handleQuery"/>
      </el-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
      <el-form-item label="${comment}" prop="${column.javaField}">
        <el-select v-model="queryParam.${column.javaField}" placeholder="请选择${comment}" clearable size="small">
          <el-option
            v-for="${column.javaField}Option in ${column.javaField}OptionList"
            :key="${column.javaField}Option.dictValue"
            :label="${column.javaField}Option.dictLabel"
            :value="${column.javaField}Option.dictValue"
          />
        </el-select>
      </el-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
      <el-form-item label="${comment}" prop="${column.javaField}">
        <el-select v-model="queryParam.${column.javaField}" placeholder="请选择${comment}" clearable size="small">
          <el-option label="请选择字典生成" value="" />
        </el-select>
      </el-form-item>
#elseif($column.htmlType == "datetime")
      <el-form-item label="${comment}" prop="${column.javaField}">
        <el-date-picker clearable size="small" style="width: 200px" v-model="queryParam.${column.javaField}" type="date" value-format="yyyy-MM-dd" placeholder="选择${comment}"></el-date-picker>
      </el-form-item>
#end
#end
#end
      <el-form-item>
        <el-button type="cyan" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button type="primary" icon="el-icon-plus" size="mini" @click="handleAdd" v-hasPerm="['${moduleName}:${businessName}:add']">
            新增
        </el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="get${BusinessName}List"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="${businessName}TreeOptionList" row-key="${treeCode}" :tree-props="{children: 'children', hasChildren: 'hasChildren'}">
#foreach($column in $columnList)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.listFlag=="1")
#if($column.htmlType == "datetime")
      <el-table-column label="${comment}" align="center" prop="${javaField}" width="180">
        <template slot-scope="scope">
          <span>{{ parseTime(scope.row.${javaField}, '{y}-{m}-{d}') }}</span>
        </template>
      </el-table-column>
#elseif($column.dictType && "" != $column.dictType)
      <el-table-column label="${comment}" align="center" prop="${javaField}" :formatter="${javaField}Format" />
#elseif("" != $javaField)
      <el-table-column label="${comment}" align="center" prop="${javaField}" />
#end
#end
#end
      <el-table-column label="操作" align="center" class-name="small-paddingEnum fixed-width">
        <template slot-scope="scope">
          <el-button size="mini" type="text" icon="el-icon-edit" @click="handleUpdate(scope.row)" v-hasPerm="['${moduleName}:${businessName}:update']">
              修改
          </el-button>
          <el-button size="mini" type="text" icon="el-icon-edit" @click="handleAdd(scope.row)" v-hasPerm="['${moduleName}:${businessName}:add']">
              新增
          </el-button>
          <el-button size="mini" type="text" icon="el-icon-delete" @click="handleDelete(scope.row)" v-hasPerm="['${moduleName}:${businessName}:remove']">
              删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>

    <!-- 添加或修改${functionName}对话框 -->
    <el-dialog :title="dialogTitle" :visible.sync="openDialog" width="500px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
#foreach($column in $columnList)
#set($field=$column.javaField)
#if($column.editFlag=="1" && $column.pkFlag!="1")
#if(($column.usableColumn) || (!$column.superColumn))
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#set($dictType=$column.dictType)
#if("" != $treeParentCode && $column.javaField == $treeParentCode)
        <el-form-item label="${comment}" prop="${treeParentCode}">
          <treeselect v-model="form.${treeParentCode}" :options="${businessName}TreeOptionList" :normalizer="normalizer" placeholder="请选择${comment}" />
        </el-form-item>
#elseif($column.htmlType == "input")
        <el-form-item label="${comment}" prop="${field}">
          <el-input v-model="form.${field}" placeholder="请输入${comment}" />
        </el-form-item>
#elseif($column.htmlType == "number")
        <el-form-item label="${comment}" prop="${field}">
          <el-input-number v-model="form.${field}" controls-position="right" placeholder="请输入${comment}" />
        </el-form-item>
#elseif($column.htmlType == "editor")
        <el-form-item label="${comment}">
          <editor v-model="form.${field}" :min-height="192"/>
        </el-form-item>
#elseif($column.htmlType == "select" && "" != $dictType)
        <el-form-item label="${comment}" prop="${field}">
          <el-select v-model="form.${field}" placeholder="请选择${comment}">
            <el-option
              v-for="${field}Option in ${field}OptionList"
              :key="${field}Option.dictValue"
              :label="${field}Option.dictLabel"
              #if($column.javaType == "Integer" || $column.javaType == "Long"):value="parseInt(dict.dictValue)"#else:value="dict.dictValue"#end>
            </el-option>
          </el-select>
        </el-form-item>
#elseif($column.htmlType == "select" && $dictType)
        <el-form-item label="${comment}" prop="${field}">
          <el-select v-model="form.${field}" placeholder="请选择${comment}">
            <el-option label="请选择字典生成" value="" />
          </el-select>
        </el-form-item>
#elseif($column.htmlType == "checkbox" && "" != $dictType)
        <el-form-item label="${comment}">
          <el-checkbox-group v-model="form.${field}">
            <el-checkbox
              v-for="${field}Option in ${field}OptionList"
              :key="${field}Option.dictValue"
              :label="${field}Option.dictValue">
              {{${field}Option.dictLabel}}
            </el-checkbox>
          </el-checkbox-group>
        </el-form-item>
#elseif($column.htmlType == "checkbox" && $dictType)
        <el-form-item label="${comment}">
          <el-checkbox-group v-model="form.${field}">
            <el-checkbox>请选择字典生成</el-checkbox>
          </el-checkbox-group>
        </el-form-item>
#elseif($column.htmlType == "radio" && "" != $dictType)
        <el-form-item label="${comment}">
          <el-radio-group v-model="form.${field}">
            <el-radio
              v-for="${field}Option in ${field}OptionList"
              :key="${field}Option.dictValue"
              #if($column.javaType == "Integer" || $column.javaType == "Long"):label="parseInt(${field}Option.dictValue)"#else:label="${field}Option.dictValue"#end>
                {{${field}Option.dictLabel}}
            </el-radio>
          </el-radio-group>
        </el-form-item>
#elseif($column.htmlType == "radio" && $dictType)
        <el-form-item label="${comment}">
          <el-radio-group v-model="form.${field}">
            <el-radio label="1">请选择字典生成</el-radio>
          </el-radio-group>
        </el-form-item>
#elseif($column.htmlType == "datetime")
        <el-form-item label="${comment}" prop="${field}">
          <el-date-picker clearable size="small" style="width: 200px"
            v-model="form.${field}"
            type="date"
            value-format="yyyy-MM-dd"
            placeholder="选择${comment}">
          </el-date-picker>
        </el-form-item>
#elseif($column.htmlType == "textarea")
        <el-form-item label="${comment}" prop="${field}">
          <el-input v-model="form.${field}" type="textarea" placeholder="请输入内容" />
        </el-form-item>
#end
#end
#end
#end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { select${ClassName}List, detail${ClassName}, add${ClassName}, update${ClassName}, delete${ClassName} } from '@/api/${moduleName}/${businessName}'
import Treeselect from '@riophae/vue-treeselect'
import '@riophae/vue-treeselect/dist/vue-treeselect.css'
#foreach($column in $columnList)
#if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "editor")
import Editor from '@/components/Editor'
#break
#end
#end

export default {
  name: '${BusinessName}',
  components: {#foreach($column in $columnList)#if($column.insert && !$column.superColumn && !$column.pk && $column.htmlType == "editor")Editor,#break#end#end Treeselect },
  data() {
    return {
      // 遮罩层
      loading: true,
      // 显示搜索条件
      showSearch: true,
      // ${functionName}树选项
      ${businessName}TreeOptionList: [],
      // 弹出层标题
      dialogTitle: '',
      // 是否显示弹出层
      openDialog: false,
#foreach ($column in $columnList)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.dictType && "" != $column.dictType)
      // $comment字典
      ${column.javaField}OptionList: [],
#end
#end
      // 查询参数
      queryParam: {
#foreach ($column in $columnList)
#if($column.queryFlag=="1")
        $column.javaField: null,
#end
#end
      },
      // 表单参数
      form: {},
      // 表单校验
      rules: {
#foreach ($column in $columnList)
#if($column.requiredFlag=="1")
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
        $column.javaField: [
          { required: true, message: '$comment不能为空', trigger: #if($column.htmlType == "select")'change'#else'blur'#end }
        ],
#end
#end
      }
    }
  },
  created() {
    this.get${BusinessName}List()
#foreach ($column in $columnList)
#if($column.dictType && "" != $column.dictType )
    this.getDictDataByDictType('${column.dictType}').then(response => {
        this.${column.javaField}OptionList = response.data
    })
#end
#end
  },
  methods: {
    /** 查询${functionName}列表 */
    get${BusinessName}List() {
      this.loading = true
       select${ClassName}List(this.queryParam).then(response => {
        this.${businessName}TreeOptionList = this.handleTree(response.data, '${treeCode}', '${treeParentCode}')
        this.loading = false
      })
    },
    /** 转换${functionName}数据结构 */
    normalizer(node) {
      if (node.children && !node.children.length) {
        delete node.children
      }
      return {
        id: node.${treeCode},
        label: node.${treeName},
        children: node.children
      }
    },
#foreach ($column in $columnList)
#if($column.dictType && "" != $column.dictType )
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
    // $comment字典翻译
    ${column.javaField}Format(row, column) {
      return this.handleDictLabel#if($column.htmlType == "checkbox")s#end(this.${column.javaField}OptionList, row.${column.javaField})
    },
#end
#end
    // 取消按钮
    cancel() {
      this.openDialog = false
      this.reset()
    },
    // 表单重置
    reset() {
      this.form = {
#foreach ($column in $columnList)
#if(!($column.javaField == "createUser" || $column.javaField == "createTime" || $column.javaField == "updateUser" || $column.javaField == "updateTime"))
#if($column.htmlType == "radio")
        $column.javaField: #if($column.javaType == "Integer" || $column.javaType == "Long")0#else'0'#end,
#elseif($column.htmlType == "checkbox")
        $column.javaField: [],
#else
        $column.javaField: undefined,
#end
#end
#end
      }
      this.resetForm('form')
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.get${BusinessName}List()
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm('queryForm')
      this.handleQuery()
    },
    /** 新增按钮操作 */
    handleAdd(row) {
      this.reset()
      this.openDialog = true
      if (row != null) {
          this.form.${treeParentCode} = row.${treeCode}
      }
      this.dialogTitle = '添加${functionName}'
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset()
      if (row != null) {
        this.form.${treeParentCode} = row.${treeCode}
      }
      detail${ClassName}(row.${pkColumn.javaField}).then(response => {
        this.form = response.data
#foreach ($column in $columnList)
#if($column.htmlType == "checkbox")
        this.form.$column.javaField = this.form.${column.javaField}.split(',')
#end
#end
        this.openDialog = true
        this.dialogTitle = '修改${functionName}'
      })
    },
    /** 提交按钮 */
    submitForm() {
      this.#[[$]]#refs.form.validate(valid => {
        if (valid) {
#foreach ($column in $columnList)
#if($column.htmlType == "checkbox")
          this.form.$column.javaField = this.form.${column.javaField}.join(',')
#end
#end
          if (this.form.${pkColumn.javaField} != null) {
            update${ClassName}(this.form).then(response => {
              this.messageSuccess('修改成功')
              this.openDialog = false
              this.get${BusinessName}List()
            })
          } else {
            add${ClassName}(this.form).then(response => {
              this.messageSuccess('新增成功')
              this.openDialog = false
              this.get${BusinessName}List()
            })
          }
        }
      })
    },
    /** 删除按钮操作 */
    handleDelete(row) {
#foreach($column in $columnList)
#if($column.listFlag=="1")
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#break
#end
#end
      this.$confirm('是否确认删除${comment}为《' + row.${javaField} + '》的数据项?', '警告', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          return delete${ClassName}(row.${pkColumn.javaField})
        }).then(() => {
          this.get${BusinessName}List()
          this.messageSuccess('删除成功')
        })
    }
  }
}
</script>
